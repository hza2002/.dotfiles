#!/usr/bin/env bash

# ====== Variables =============================
declare -A gaps

gaps["top"]="10"
gaps["bottom"]="4"
gaps["left"]="4"
gaps["right"]="4"
gaps["window"]="6"

# ===== Loading Scripting Additions ============
# 监听信号，并在dock重启后重新加载yabai
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
# 使用sudo来运行yabai，并加载状态保存文件
sudo yabai --load-sa

# ===== Tiling setting =========================
yabai -m config layout                       bsp                        # 布局设置为二叉分割(bsp or float)
                                                                        
yabai -m config top_padding                  "${gaps["top"]}"           # 顶部填充
yabai -m config bottom_padding               "${gaps["bottom"]}"        # 底部填充
yabai -m config left_padding                 "${gaps["left"]}"          # 左侧填充
yabai -m config right_padding                "${gaps["right"]}"         # 右侧填充
yabai -m config window_gap                   "${gaps["window"]}"        # 窗口间隙

yabai -m config auto_balance                 off                        # 自动平衡关闭
yabai -m config split_ratio                  0.50                       # 分屏比例 between 0 and 1 (default: 0.5)
yabai -m config window_animation_duration    0.00                       # 窗口动画持续时间设置为0.00
                                                                        
# ===== Mouse support ==========================
yabai -m config focus_follows_mouse          off                        # 焦点跟随鼠标(default: off, options: off, autoraise, autofocus)
yabai -m config mouse_follows_focus          off                        # 鼠标跟随焦点(default: off)

yabai -m config mouse_modifier               fn                         # 鼠标修饰键(default: fn)
yabai -m config mouse_drop_action            swap                       # 鼠标拖放动作设置为交换
yabai -m config mouse_action1                move                       # modifier + left-click drag to move window (default: move)
yabai -m config mouse_action2                resize                     # modifier + right-click drag to resize window (default: resize)
                                                                        
# ===== Window modifications ===================
yabai -m config window_topmost               on                         # 浮动窗口始终位于顶部
yabai -m config window_opacity               off                        # 窗口透明度
yabai -m config window_shadow                on                         # 窗口阴影(default: on, options: on, off, float)

# yabai -m config active_window_opacity        1.0                        # 活动窗口透明度设置为1.0
# yabai -m config normal_window_opacity        0.9                        # 普通窗口透明度

yabai -m config  active_window_border_color  0xffe1e3e4                 # 活动窗口的边框颜色
yabai -m config  normal_window_border_color  0xff494d64                 # 非活动窗口的边框颜色
yabai -m config  insert_feedback_color       0xff9dd274                 # 插入反馈的颜色

yabai -m config window_border                on                         # 窗口边框
yabai -m config window_border_width          2                          # 窗口边框宽度
yabai -m config window_opacity_duration      0                          # 窗口透明度变化持续时间
yabai -m config window_origin_display        default                    # 窗口起始显示器设置为默认
yabai -m config window_placement             second_child               # 窗口位置设置为第二个子窗口

# ===== Rules ==================================
forbidden_app=(
  "ClashX Pro"
  "Dash"
  "Karabiner-Elements"
  "Karabiner-EventViewer"
  "iStat Menus" 
  "系统设置"
  "LyricsX"
  "JetBrains Toolbox"
  "Barrier"
  "Tencent Lemon"
  "kitty"
  "V2rayU"
  "Raycast"
)

for app in "${forbidden_app[@]}"; do
    yabai -m rule --add app="$app" manage=off
done

# ===== Status bar =============================
# add 20 padding to the top and bottom of all spaces regardless of the display it belongs to
yabai -m config external_bar all:30:0

# ===== Signals ================================
# (optional) needed for yabai window state and running application icons) yabai events:
yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"

echo "yabai configuration loaded.."
